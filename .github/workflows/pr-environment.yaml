name: PR Environment Management

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  manage-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Kubernetes tools
        run: |
          curl -sLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          curl -sLO https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.9.0-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/
          curl -Lo vcluster-bin https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64
          chmod +x vcluster-bin
          sudo mv vcluster-bin /usr/local/bin/vcluster

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Authenticate to Kubernetes cluster
        run: |
          aws eks --region us-west-2 update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Create or Delete vCluster
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          if [ "${{ github.event.action }}" != "closed" ]; then
            # Create namespace for the vCluster
            kubectl create namespace vcluster-pr-${PR_NUMBER}

            # Render the vCluster YAML template and apply it
            sed "s/{{PR_NUMBER}}/${PR_NUMBER}/g" vcluster/vcluster-template.yaml | kubectl apply -f -
          else
            # Delete the VCluster resource
            kubectl delete vcluster vcluster-pr-${PR_NUMBER} -n vcluster-pr-${PR_NUMBER} --ignore-not-found
            # Delete the namespace
            kubectl delete namespace vcluster-pr-${PR_NUMBER} --ignore-not-found
          fi

      - name: Wait for vCluster to be ready
        if: ${{ github.event.action != 'closed' }}
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          kubectl wait --for=condition=Ready vcluster/vcluster-pr-${PR_NUMBER} -n vcluster-pr-${PR_NUMBER} --timeout=600s

      - name: Register vCluster with Argo CD
        if: ${{ github.event.action != 'closed' }}
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --insecure --username admin --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd cluster add --name vcluster-pr-${PR_NUMBER} --kubeconfig ./vcluster-pr-${PR_NUMBER}-kubeconfig --insecure

      - name: Create Argo CD Application
        if: ${{ github.event.action != 'closed' }}
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          sed "s/{{PR_NUMBER}}/${PR_NUMBER}/g" argocd/argocd-application-template.yaml | kub
